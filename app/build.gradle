apply plugin: 'com.android.application'
apply from: "$rootDir/shared.gradle"
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "kotlin-parcelize"

android {
    compileSdkVersion Versions.compileSdk

    defaultConfig {
        applicationId ApplicationId.packageName
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionName = "1.0.0"
        versionCode generateVersionCode(versionName)
        vectorDrawables.useSupportLibrary = true
    }

    buildFeatures {
        viewBinding true
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable("IidCompatibilityCheckFailure")
        abortOnError true
        lintConfig = file("lint.xml")
    }

    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation project(":news-data")
    implementation project(":news-domain")

    //UI
    implementation "androidx.appcompat:appcompat:${Versions.appcompat}"
    implementation "androidx.core:core-ktx:${Versions.coreKtx}"
    implementation "androidx.fragment:fragment:${Versions.fragment}"
    implementation "androidx.fragment:fragment-ktx:${Versions.fragment}"
    implementation "androidx.activity:activity:${Versions.activity}"
    implementation "androidx.activity:activity-ktx:${Versions.activity}"
    implementation "androidx.constraintlayout:constraintlayout:${Versions.constraintLayout}"
    implementation "com.google.android.material:material:${Versions.materialComponents}"

    //Image Provider
    implementation "com.github.bumptech.glide:glide:${Versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${Versions.glide}"

    implementation "androidx.navigation:navigation-runtime-ktx:${Versions.navigation}"
    implementation "androidx.navigation:navigation-fragment-ktx:${Versions.navigation}"

    //Core
    implementation project(":common")

    //Dependency Injection
    implementation "io.insert-koin:koin-android:${Versions.koin}"
    testImplementation "io.insert-koin:koin-test:${Versions.koin}"
    androidTestImplementation "io.insert-koin:koin-test:${Versions.koin}"

    //Mockito
    testImplementation "org.mockito.kotlin:mockito-kotlin:${Versions.mockitoKotlin}"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.coroutines}"

    //junit
    testImplementation "org.junit.jupiter:junit-jupiter-api:${Versions.junit5}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${Versions.junit5}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${Versions.junit5}"
    testImplementation "androidx.test:core:${Versions.runner}"

    //Work manager
    implementation "io.insert-koin:koin-androidx-workmanager:${Versions.koin}"
}

static def generateVersionCode(String versionName) {
    String[] majorMinorPatch = versionName.split('-').first().split('\\.')

    int major = majorMinorPatch.getAt(0).toInteger()
    if (major > 99) {
        throw new GradleException("Major version of application $major can not be higher than 99")
    }

    int minor = majorMinorPatch.getAt(1).toInteger()
    if (minor > 99) {
        throw new GradleException("Minor version of application $minor can not be higher than 99")
    }

    int patch = majorMinorPatch.getAt(2).toInteger()
    if (patch > 9) {
        throw new GradleException("Patch (hotfix) version $patch can not be higher than 9")
    }

    return major * 1000 + minor * 10 + patch
}